scalar Map

type Player {
  id: ID!
  uuid: String!
  name: String!
  stats: Stats!
  advancements: [Advancement!]!
}

type Stats {
  custom: Map
  mined: Map
  broken: Map
  crafted: Map
  used: Map
  picked_up: Map
  dropped: Map
  killed: Map
  killed_by: Map
}

type Advancement {
  key: String!
  display: AdvancementDisplay
}

type AdvancementDisplay {
  tab: String
  type: String
  icon: String
  title: String
}

type Stat {
  key: String!
  value: Int!
}

type Query {
  players(server: String!, sort: String): [Player!]!
}

input StatsInput {
  custom: Map
  mined: Map
  broken: Map
  crafted: Map
  used: Map
  picked_up: Map
  dropped: Map
  killed: Map
  killed_by: Map
}

input AdvancementInput {
  key: String!
  done: Boolean!
}

input UpdatePlayer {
  server: String!
  uuid: String!
  name: String!
  stats: StatsInput!
  advancements: [AdvancementInput!]!
}

type Mutation {
  updatePlayer(input: UpdatePlayer!): Player!
}
